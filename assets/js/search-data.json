{
  
    
        "post0": {
            "title": "The Covid-19 Current Status of Countries",
            "content": "!pip install pycountry !pip install plotly !pip install pandas !pip install matplotlib . Collecting matplotlib |████████████████████████████████| 8.5 MB 6.4 MB/s eta 0:00:01 Collecting kiwisolver&gt;=1.0.1 |████████████████████████████████| 60 kB 7.8 MB/s eta 0:00:011 Collecting pillow&gt;=6.2.0 |████████████████████████████████| 2.2 MB 6.4 MB/s eta 0:00:01 Collecting cycler&gt;=0.10 Installing collected packages: kiwisolver, pillow, cycler, matplotlib Successfully installed cycler-0.10.0 kiwisolver-1.2.0 matplotlib-3.3.2 pillow-7.2.0 . import pycountry import plotly.express as px import pandas as pd URL_DATASET = f&quot;https://raw.githubusercontent.com/datasets/covid-19/master/data/countries-aggregated.csv&quot; df1 = pd.read_csv(URL_DATASET) print(df1.head(3)) # Get first 3 entries in the dataframe print(df1.tail(3)) # Get last 3 entries in the dataframe . Date Country Confirmed Recovered Deaths 0 2020-01-22 Afghanistan 0 0 0 1 2020-01-23 Afghanistan 0 0 0 2 2020-01-24 Afghanistan 0 0 0 Date Country Confirmed Recovered Deaths 45117 2020-09-15 Zimbabwe 7576 5783 224 45118 2020-09-16 Zimbabwe 7598 5823 224 45119 2020-09-17 Zimbabwe 7633 5841 224 . %matplotlib inline import matplotlib.pyplot as plt import pandas as pd #### -- Step 1 (Download data)- URL_DATASET = r&#39;https://raw.githubusercontent.com/datasets/covid-19/master/data/countries-aggregated.csv&#39; df1 = pd.read_csv(URL_DATASET) # print(df1.head(3)) # Uncomment to see the dataframe #### -- Step 2 (Select data for India)- df_india = df1[df1[&#39;Country&#39;] == &#39;India&#39;] print(df_india.head(3)) #### -- Step 3 (Plot data)- # Increase size of plot plt.rcParams[&quot;figure.figsize&quot;]=10,10 # Remove if not on Jupyter # Plot column &#39;Confirmed&#39; df_india.plot(kind = &#39;bar&#39;, x = &#39;Date&#39;, y = &#39;Confirmed&#39;, color = &#39;blue&#39;) ax1 = plt.gca() df_india.plot(kind = &#39;bar&#39;, x = &#39;Date&#39;, y = &#39;Deaths&#39;, color = &#39;red&#39;, ax = ax1) plt.show() . Date Country Confirmed Recovered Deaths 18960 2020-01-22 India 0 0 0 18961 2020-01-23 India 0 0 0 18962 2020-01-24 India 0 0 0 . %matplotlib inline import matplotlib.pyplot as plt import pandas as pd #### -- Step 1 (Download data)- URL_DATASET = r&#39;https://raw.githubusercontent.com/datasets/covid-19/master/data/countries-aggregated.csv&#39; df1 = pd.read_csv(URL_DATASET) # print(df1.head(3)) # Uncomment to see the dataframe #### -- Step 2 (Select data for India)- df_india = df1[df1[&#39;Country&#39;] == &#39;Singapore&#39;] print(df_india.head(3)) #### -- Step 3 (Plot data)- # Increase size of plot plt.rcParams[&quot;figure.figsize&quot;]=10,10 # Remove if not on Jupyter # Plot column &#39;Confirmed&#39; df_india.plot(kind = &#39;bar&#39;, x = &#39;Date&#39;, y = &#39;Confirmed&#39;, color = &#39;blue&#39;) ax1 = plt.gca() df_india.plot(kind = &#39;bar&#39;, x = &#39;Date&#39;, y = &#39;Deaths&#39;, color = &#39;red&#39;, ax = ax1) plt.show() . Date Country Confirmed Recovered Deaths 36480 2020-01-22 Singapore 0 0 0 36481 2020-01-23 Singapore 1 0 0 36482 2020-01-24 Singapore 3 0 0 .",
            "url": "https://shashanksingh.github.io/blog_redux/2020/09/17/.html",
            "relUrl": "/2020/09/17/.html",
            "date": " • Sep 17, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://shashanksingh.github.io/blog_redux/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "",
          "url": "https://shashanksingh.github.io/blog_redux/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://shashanksingh.github.io/blog_redux/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}